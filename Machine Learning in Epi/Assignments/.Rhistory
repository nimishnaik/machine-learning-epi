gc()
gc()
```{r}
---
title: "Assignment 1 Trial"
---
title: "Assignment 1 Trial"
---
title: "Assignment 1 Trial"
brew update && brew upgrade
knitr::opts_chunk$set(echo = TRUE)
my_data <- read.csv("bcdata_Assignment1.csv")
title: "Homework 1"
```{r}
```{r}
```{r}
```{r }
read.csv("bcdata_Assignment1.csv")
```{r }
library(tidyverse)
## R Markdown
```{r }
my_data <- read.csv("bcdata_Assignment1.csv")
my_data
summary(my_data)
my_data <- read.csv("bcdata_Assignment1.csv")
my_data
summary(my_data)
## Including Plots
You can also embed plots, for example:
```{r pressure, echo=FALSE}
plot(pressure)
if (my_data$bmi < 16.5){
my_data$bmi_category = "Severely Underweight"
} else if(16.5 <= my_data$bmi < 18.5){
if (my_data$bmi < 16.5){
my_data$bmi_category = "Severely Underweight"
} else if(16.5 <= my_data$bmi & my_data$bmi < 18.5){
my_data$bmi_category = "Underweight"
} else if(18.5 <= my_data$bmi & my_data$bmi < 25){
my_data$bmi_category = "Normal Weight"
} else if(25 <= my_data$bmi & my_data$bmi < 30){
my_data$bmi_category = "Overweight"
} else if(30 <= my_data$bmi & my_data$bmi < 35){
my_data$bmi_category = "Obesity Class I"
} else if(35 <= my_data$bmi & my_data$bmi < 40){
my_data$bmi_category = "Obesity Class II"
} else {
my_data$bmi_category = "Obesity class III"
}
```{r }
View(my_data)
View(my_data)
View(my_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
linear_reg <- glm(Classification ~ Glucose + HOMA + Leptin + BMI + Age, data = my_data, family = binomial())
my_data$newcat <- ifelse(my_data$Classification == 1, 0, 1)
linear_reg <- glm(Classification ~ Glucose + HOMA + Leptin + BMI + Age, data = my_data, family = binomial())
linear_reg <- glm(newcat ~ Glucose + HOMA + Leptin + BMI + Age, data = my_data, family = binomial())
summary(linear_reg)
install.packages("kableExtra")
library(tidyverse)
library(kableExtra)
kable(summary(log_model)$coefficients, format = "html", options = "striped", align = 'l') %<%
column_spec(1:4, width = "3cm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
render("Ml_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("Ml_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("Ml_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("Ml_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
render("ML_Assignment1.Rmd", output_format = "html_document")
library(rmarkdown)
render("ML_Assignment1.Rmd", output_format = "html_document")
knit2html("ML_Assignment1.Rmd", output_format = "html_document")
library(knitr)
knit2html("ML_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
purge(setup)
purge("setup")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
setwd("~/Desktop/Nimish/Columbia MPH/4. Spring 2023/Machine Learning in Epi/Assignment 1")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html_document")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
my_data <- read.csv("bcdata_Assignment1.csv")
my_data <- read.csv("bcdata_Assignment1.csv")
subset1 <- c("mean", "median", "min", "max")
summ <- summary(my_data)[subset1]
### 1. Reading in the Data and Summary Table
```{r chunk1}
summ <- summary(my_data)[subset1]
kable(summ, format = "html", options = "striped", align = 'l') %>%
column_spec(1:8, width = "5cm")
render("ML_Assignment1.Rmd", output_format = "html")
rmarkdown::render("ML_Assignment1", output_format = "html")
rmarkdown::render("ML_Assignment1.Rmd", output_format = "html")
rmarkdown::render("ML_Assignment1.Rmd", output_format = html)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
library(dplyr)
library(janitor)
options(tibble.print_min=5)
data_sum <- newdata %>%
select(c(1:9)) %>%
summarise_each(funs(mean=mean, median=median, minimum=min, maximum=max))
data_sum <- newdata %>%
select(c(1:9)) %>%
summarise_each(funs(mean=mean, median=median, minimum=min, maximum=max))
data_sum <- newdata %>%
select(c(1:9)) %>%
summarise_each(funs(mean=mean, median=median, minimum=min, maximum=max))
data_sum <- newdata %>%
select(c(1:9)) %>%
summarise_each(funs(mean=mean, median=median, minimum=min, maximum=max))
data_sum <- newdata %>%
select(c(1:9)) %>%
summarise_each(funs(mean=mean, median=median, minimum=min, maximum=max))
